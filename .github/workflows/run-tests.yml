name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      run_integration_tests:
        description: 'Run integration tests'
        required: false
        default: false
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.10']
      fail-fast: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-cov pytest-mock
      
      - name: Run tests
        run: |
          mkdir -p test_results
          python -m pytest test/ \
            --html=test_results/report.html \
            --cov=repo_transfer \
            --cov-report=xml \
            --cov-report=html:test_results/coverage \
            -v
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.python-version }}
          path: test_results
        if: always()
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.run_integration_tests == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-cov
      
      - name: Run integration tests
        env:
          GITHUB_TEST_INTEGRATION: 1
          GITHUB_TOKEN_ADMIN: ${{ secrets.GITHUB_TOKEN_ADMIN }}
          GITHUB_TOKEN_MEMBER: ${{ secrets.GITHUB_TOKEN_MEMBER }}
          GITHUB_TOKEN_READONLY: ${{ secrets.GITHUB_TOKEN_READONLY }}
        run: |
          mkdir -p test_results/integration
          python -m pytest test/integration/test_integration.py::TestRealIntegration \
            --html=test_results/integration/report.html \
            -v
        if: "${{ env.GITHUB_TOKEN_ADMIN != '' }}"
      
      - name: Upload integration test results
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-results
          path: test_results/integration
        if: always()
